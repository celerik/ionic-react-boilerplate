[{"/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/index.tsx":"1","/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/serviceWorker.ts":"2","/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/App.tsx":"3","/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/pages/Tabs/Tab2/Tab2.tsx":"4","/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/pages/Tabs/Tab3/Tab3.tsx":"5","/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/pages/Tabs/Tab1/Tab1.tsx":"6","/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/stories/Button.stories.tsx":"7","/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/stories/Page.stories.tsx":"8","/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/components/ExploreContainer/ExploreContainer.stories.tsx":"9","/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/stories/Header.stories.tsx":"10","/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/stories/Header.tsx":"11","/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/components/ExploreContainer/ExploreContainer.tsx":"12","/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/stories/Button.tsx":"13","/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/stories/Page.tsx":"14"},{"size":430,"mtime":1611174554608,"results":"15","hashOfConfig":"16"},{"size":5206,"mtime":1611174686104,"results":"17","hashOfConfig":"16"},{"size":2128,"mtime":1611176270763,"results":"18","hashOfConfig":"16"},{"size":178,"mtime":1611177220588,"results":"19","hashOfConfig":"16"},{"size":178,"mtime":1611172168376,"results":"20","hashOfConfig":"16"},{"size":191,"mtime":1611176328988,"results":"21","hashOfConfig":"16"},{"size":804,"mtime":1611132698868,"results":"22","hashOfConfig":"16"},{"size":605,"mtime":1611132698870,"results":"23","hashOfConfig":"16"},{"size":234,"mtime":1611150749928,"results":"24","hashOfConfig":"16"},{"size":510,"mtime":1611132698869,"results":"25","hashOfConfig":"16"},{"size":1483,"mtime":1611150749938,"results":"26","hashOfConfig":"16"},{"size":409,"mtime":1611177979805,"results":"27","hashOfConfig":"16"},{"size":965,"mtime":1611150749935,"results":"28","hashOfConfig":"16"},{"size":2619,"mtime":1611150749925,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"42bamz",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/index.tsx",[],[],"/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/serviceWorker.ts",["60","61"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/App.tsx",[],"/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/pages/Tabs/Tab2/Tab2.tsx",[],"/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/pages/Tabs/Tab3/Tab3.tsx",[],"/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/pages/Tabs/Tab1/Tab1.tsx",[],"/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/stories/Button.stories.tsx",[],"/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/stories/Page.stories.tsx",[],"/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/components/ExploreContainer/ExploreContainer.stories.tsx",[],"/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/stories/Header.stories.tsx",[],"/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/stories/Header.tsx",["62"],"/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/components/ExploreContainer/ExploreContainer.tsx",[],"/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/stories/Button.tsx",[],"/Users/shfsas/Boilerplates/ionic-react-boilerplate/src/stories/Page.tsx",["63"],{"ruleId":"64","severity":1,"message":"65","line":28,"column":8,"nodeType":"66","messageId":"67","endLine":28,"endColumn":42},{"ruleId":"64","severity":1,"message":"65","line":136,"column":8,"nodeType":"66","messageId":"67","endLine":136,"endColumn":29},{"ruleId":"68","severity":1,"message":"69","line":7,"column":10,"nodeType":"70","messageId":"71","endLine":7,"endColumn":13,"suggestions":"72"},{"ruleId":"68","severity":1,"message":"69","line":7,"column":10,"nodeType":"70","messageId":"71","endLine":7,"endColumn":13,"suggestions":"73"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["74","75"],["76","77"],{"messageId":"78","fix":"79","desc":"80"},{"messageId":"81","fix":"82","desc":"83"},{"messageId":"78","fix":"84","desc":"80"},{"messageId":"81","fix":"85","desc":"83"},"suggestUnknown",{"range":"86","text":"87"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"86","text":"88"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"89","text":"87"},{"range":"89","text":"88"},[127,130],"unknown","never",[123,126]]